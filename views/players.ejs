<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
    <link rel="stylesheet" href="/style_players.css">
    <link rel="icon" href="" />
    <title>Sprit11-Admin</title>

</head>

<body>

    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
            <div class="first h4 d-inline">
                <i class="bi bi-boxes"></i>
                <span class="brand-name mb-lg-0">Spirit11</span>
            </div>

            <div class="second collapse navbar-collapse">
                <ul class="navbar-nav mb-lg-0 ">
                    <li class="nav-item ">
                        <a class="nav-link" aria-current="page" href="#">Players</a>
                    </li>

                    <% if(isAdmin) {%>
                        <li class="nav-item">
                            <a class="nav-link" href="/player-stats">Player Stats</a>
                        </li>
                        <% } %>
                            <% if(isAdmin) {%>
                                <li class="nav-item">
                                    <a class="nav-link" href="/player-add">Add Player</a>
                                </li>
                                <% } %>
                                    <li class="nav-item">
                                        <a class="nav-link" href="/tournament-summary">Tournement Summary</a>
                                    </li>
                </ul>
            </div>

            <div class="thired">
                <a href="/signout" class="btn px-3 d-inline" style="background-color: red;">Sign Out</a>
            </div>
        </div>
    </nav>
    <br><br>
    <div class="container players mt-5">
        <table>
            <tr>
                <th>Name</th>
                <th>University</th>
                <% if(isAdmin) { %>
                    <th>Actions</th>
                    <% } %>
            </tr>

            <tbody>
                <% players.forEach(player=> { %>
                    <tr>
                        <td>
                            <%= player.name %>
                        </td>
                        <td>
                            <%= player.university %>
                        </td>
                        <% if(isAdmin) { %>
                            <td>
                                <div class="buttons">
                                    <a type="button" class="btn btn-primary" data-playerId="<%= player._id %>">Edit</a>
                                    <a type="button" class="btn btn-danger" data-playerId="<%= player._id %>">Delete</a>
                                </div>
                            </td>
                            <% } %>
                    </tr>
                    <% }) %>
            </tbody>
        </table>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get all delete buttons
            const deleteButtons = document.querySelectorAll('.btn-danger');

            // Add click event listener to each delete button
            deleteButtons.forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();

                    // Get the player ID from the data attribute
                    const playerId = this.getAttribute('data-playerId');

                    // Confirm deletion
                    if (confirm('Are you sure you want to delete this player?')) {
                        // Send DELETE request using Axios
                        axios.delete(`http://localhost:3000/api/v1/players/${playerId}`)
                            .then(response => {
                                // Remove the row from the table on successful deletion
                                this.closest('tr').remove();
                                // Alternatively: window.location.reload();
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while deleting the player');
                            });
                    }
                });
            });

            // Get all edit buttons
            const editButtons = document.querySelectorAll('.btn-primary');

            // Add click event listener to each edit button
            editButtons.forEach(button => {
                button.addEventListener('click', function (e) {
                    e.preventDefault();

                    // Get the player ID from the data attribute
                    const playerId = this.getAttribute('data-playerId');

                    // Navigate to the edit page
                    window.location.href = `/player-edit/${playerId}`;
                });
            });

        });
    </script>

</body>

</html>